<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
			"-//mybatis.org//DTD Mapper 3.0//EN" 
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
			
<mapper namespace="com.itbank.reply.EplReplyDAO">

	
		<select id="replyList" parameterType="hashmap" resultType="EplReply">
				select
				distinct EPLreply.idxRe,
				EPLreply.content,
                EPLreply.writer,
                EPLreply.idxBo,
                EPLreply.wdate,
                EPLreply.likeCount,
                EPLreply.idxParent,
				EPLmember.nickName	as	nickName,
				EPLmember.club	as	club,
                (select count(*) from EPLreplyLike where EPLreply.idxRe = EPLreplyLike.likeIdxRe) as replyCount,
				(select count(*) from
				 EPLreplyLike where EPLreply.idxRe = EPLreplyLike.likeIdxRe and EPLreplyLike.likeId = #{likeId})
				 as replyCheck
				
				from
				EPLreply
				
                inner join
				EPLmember
				on
				EPLreply.writer = EPLmember.id
                
                full outer join
                EPLreplyLike
                on
                EPLreply.idxRe = EPLreplyLike.likeIdxRe
				
				where idxBo = #{idx}
				<if test="listCnt != null">
				and (select count(*) from EPLreplyLike where EPLreply.idxRe = EPLreplyLike.likeIdxRe) = #{replyMaxCnt}
				</if>
				order by idxRe 
				 <if test="listCnt != null">
				desc
				</if>
				
				 <if test="listCnt != null">
				fetch first #{listCnt} rows only
				</if>
	</select>
	
	
	<insert id="insertReply" parameterType="EplReply">
		insert into EplReply
			(idxRe, content, writer, idxBo, idxParent) 
				values 
			(EPLreply_seq.nextval, #{content}, #{writer}, #{idxBo}, #{idxParent})
	</insert>

	<delete id="deleteReply" parameterType="int">
	delete EplReply where idxRe = #{idx}
	
	</delete>
	
	<update id="updateReply" parameterType="EplReply" >
		update EplReply
			set content = #{content}
			where
				idxRe = #{idxRe}
	</update>
	
	<insert id="replyLikeDo" parameterType="EplReplyLike">
	insert into EPLreplyLike
			(likeIdxRe, likeId) 
				values 
			(#{likeIdxRe}, #{likeId})
	
	</insert>
	
	<delete id="replyLikeUndo" parameterType="EplReplyLike">
	delete EPLreplyLike where likeIdxRe = #{likeIdxRe} and  likeId = #{likeId}
	
	</delete>
	
	
</mapper>





